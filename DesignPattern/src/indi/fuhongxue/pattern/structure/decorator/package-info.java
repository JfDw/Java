/**
 * 装饰模式。
 * 不必改变原类文件和使用继承的情况下，
 * 动态地扩展一个对象的功能。
 * 
 * 通过创建一个包装对象（装饰）来包裹真实的对象。
 * 
 */
/**
 * @author 1HBLSQT
 * 1. 装饰对象和真实对象具有相同的接口：这样客户端对象就能以和真实对象相同的方式和装饰对象交互；
 * 2. 装饰对象包含一个真实对象的引用；
 * 3. 装饰对象接受所有来自客户端的请求，并将这些对象传递给真实的对象；
 * 4. 装饰对象在传递客户端请求以前或以后增加一些附加功能：这样就不用修改真实对象的结构就可以在外部增加附加的功能。
 */
package indi.fuhongxue.pattern.structure.decorator;